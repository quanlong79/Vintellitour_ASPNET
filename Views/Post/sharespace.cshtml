@model Vintellitour_Framework.ViewModels.SharespaceViewModel

@{
    Layout = "_Layout";
}

@section Scripts {
    <script src="~/js/kgcs/comment_modal.js"></script>
    <script src="~/js/kgcs/share_space.js"></script>
}

<div class="min-h-screen bg-gradient-to-br from-slate-50 to-purple-50">
    <div class="container mx-auto px-4 py-8">
        <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">

            <!-- MAIN CONTENT -->
            <div class="lg:col-span-3">
                <!-- HEADER SECTION -->
                <div class="bg-white rounded-2xl shadow-sm border border-slate-200 p-6 mb-8">
                    <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-6">

                        <!-- Title Section -->
                        <div class="flex items-center gap-4">
                            <div class="p-3 bg-gradient-to-r from-purple-500 to-blue-500 rounded-xl">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                                </svg>
                            </div>
                            <div>
                                <h1 class="text-2xl font-bold text-slate-800">
                                    @if (!string.IsNullOrEmpty(Model.SelectedProvinceId))
                                    {
                                        var p = Model.Provinces.FirstOrDefault(x => x.Id == Model.SelectedProvinceId);
                                        <text>@p?.Name</text>
                                    }
                                    else
                                    {
                                        <text>Tất cả tỉnh thành</text>
                                    }
                                </h1>
                                <p class="text-slate-500 text-sm mt-1">Khám phá và chia sẻ những trải nghiệm tuyệt vời</p>
                            </div>
                        </div>

                        <!-- Filter Controls -->
                        <div class="flex flex-wrap items-center gap-3">
                            <form id="filterForm" method="get" class="flex flex-wrap items-center gap-3">
                                <input type="hidden" id="selectedProvinceId" name="selectedProvinceId" value="@Model.SelectedProvinceId" />
                                <input type="hidden" id="showOnlyMyPostsInput" name="showOnlyMyPosts" value="@Model.ShowOnlyMyPosts.ToString().ToLower()" />
                                <input type="hidden" id="sortOrderInput" name="sortOrder" value="@Model.SortOrder" />

                                @if (!string.IsNullOrEmpty(Model.SelectedProvinceId))
                                {
                                    <button type="button" id="ClearfilterProvinces"
                                            class="inline-flex items-center gap-2 px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-xl transition-all duration-200 font-medium shadow-sm hover:shadow-md transform hover:scale-105">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                        </svg>
                                        <span>Xóa bộ lọc</span>
                                    </button>
                                }

                                <!-- My Posts Toggle -->
                                <button type="button" id="toggleShowMyPostsBtn"
                                        class="inline-flex items-center gap-3 px-5 py-2.5 rounded-xl font-medium transition-all duration-300 shadow-sm hover:shadow-md transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2
                                        @(Model.ShowOnlyMyPosts
                                            ? "bg-gradient-to-r from-blue-500 to-purple-600 text-white"
                                            : "bg-white border-2 border-slate-200 text-slate-700 hover:border-purple-300 hover:bg-purple-50")">

                                    @if (Model.ShowOnlyMyPosts)
                                    {
                                        <div class="flex items-center gap-2">
                                            <div class="p-1 bg-white/20 rounded-full">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                                </svg>
                                            </div>
                                            <span>Bài viết của tôi</span>
                                            <span id="resetShowMyPosts" title="Bỏ lọc"
                                                  class="ml-1 p-1 bg-white/20 hover:bg-white/30 rounded-full cursor-pointer transition-colors">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                                </svg>
                                            </span>
                                        </div>
                                    }
                                    else
                                    {
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                        </svg>
                                        <span>Bài viết của tôi</span>
                                    }
                                </button>

                                <!-- Sort Button -->
                                <button type="button" id="toggleSortOrderBtn"
                                        class="inline-flex items-center gap-2 px-4 py-2.5 bg-white border-2 border-slate-200 text-slate-700 hover:border-purple-300 hover:bg-purple-50 rounded-xl transition-all duration-200 font-medium shadow-sm hover:shadow-md transform hover:scale-105">
                                    @if (Model.SortOrder == "newest")
                                    {
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4h13M3 8h9m-9 4h6m4 0l4-4m0 0l4 4m-4-4v12" />
                                        </svg>
                                        <span>Mới nhất</span>
                                    }
                                    else
                                    {
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4h13M3 8h9m-9 4h9m5-4v12m0 0l-4-4m4 4l4-4" />
                                        </svg>
                                        <span>Cũ nhất</span>
                                    }
                                </button>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- POSTS SECTION -->
                @if (Model.Posts.Count == 0)
                {
                    <div class="bg-white rounded-2xl shadow-sm border border-slate-200 p-12 text-center">
                        <div class="max-w-md mx-auto">
                            <div class="p-4 bg-slate-100 rounded-full w-20 h-20 mx-auto mb-6 flex items-center justify-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-slate-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                </svg>
                            </div>
                            <h3 class="text-xl font-semibold text-slate-700 mb-2">Chưa có bài viết nào</h3>
                            <p class="text-slate-500">Hãy thử thay đổi bộ lọc hoặc quay lại sau để xem các bài viết mới.</p>
                        </div>
                    </div>
                }
                else
                {
                    <div class="space-y-6">
                        @foreach (var post in Model.Posts)
                        {
                            <article class="bg-white rounded-2xl shadow-sm border border-slate-200 hover:shadow-md transition-all duration-300 overflow-hidden">
                                <!-- Author Info -->
                                <div class="p-6 pb-4">
                                    <div class="flex items-start gap-4">
                                        <div class="relative">
                                            <img src="@(string.IsNullOrEmpty(post.AuthorAvatar) ? "/img/VN.jpg" : post.AuthorAvatar)"
                                                 alt="@post.AuthorName"
                                                 class="w-12 h-12 rounded-full object-cover ring-2 ring-slate-100" />
                                            <div class="absolute -bottom-1 -right-1 w-4 h-4 bg-green-400 rounded-full border-2 border-white"></div>
                                        </div>

                                        <div class="flex-1 min-w-0">
                                            <div class="flex items-center gap-2 mb-1">
                                                <h3 class="font-semibold text-slate-800 truncate">@post.AuthorName</h3>

                                                <!-- Author Badges -->
                                                @if (Model.AuthorBadges != null && Model.AuthorBadges.TryGetValue(post.Post.AuthorId, out var badges))
                                                {
                                                    <div class="flex gap-1">
                                                        @foreach (var badge in badges)
                                                        {
                                                            @await Html.PartialAsync("_PremiumBadge", badge)
                                                        }
                                                    </div>
                                                }
                                            </div>

                                            <div class="flex items-center gap-2 text-sm text-slate-500">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                                                </svg>
                                                <time>@post.Post.Timestamp.ToLocalTime().ToString("dd/MM/yyyy HH:mm")</time>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Post Content -->
                                <div class="px-6 pb-4">
                                    <div id="content-@post.Post.Id" class="text-slate-800 leading-relaxed line-clamp-3">
                                        @post.Post.Content
                                    </div>
                                    @if (post.Post.Content.Length > 100)
                                    {
                                        <button id="btn-expand-@post.Post.Id"
                                                class="mt-2 text-purple-600 hover:text-purple-700 font-medium text-sm transition-colors duration-200"
                                                onclick="toggleExpand('@post.Post.Id')">
                                            Xem thêm
                                        </button>
                                    }
                                </div>

                                <!-- Media Gallery -->
                                @if (post.Post.Media != null && post.Post.Media.Count > 0)
                                {
                                    <div class="px-6 pb-4">
                                        <div id="media-@post.Post.Id" class="relative bg-slate-100 rounded-xl overflow-hidden" style="aspect-ratio: 4/2; max-height: 400px;">
                                            @for (int i = 0; i < post.Post.Media.Count; i++)
                                            {
                                                var media = post.Post.Media[i];
                                                <img src="@media.MediaUrl"
                                                     alt="media"
                                                     class="absolute inset-0 w-full h-full object-cover transition-opacity duration-300"
                                                     style="display:@(i == 0 ? "block" : "none");" />
                                            }

                                            @if (post.Post.Media.Count > 1)
                                            {
                                                <!-- Navigation Buttons -->
                                                <button onclick="showPrevImage('@post.Post.Id')"
                                                        class="absolute left-3 top-1/2 transform -translate-y-1/2 p-2 bg-black/30 hover:bg-black/50 text-white rounded-full transition-all duration-200 backdrop-blur-sm">
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                                                    </svg>
                                                </button>
                                                <button onclick="showNextImage('@post.Post.Id')"
                                                        class="absolute right-3 top-1/2 transform -translate-y-1/2 p-2 bg-black/30 hover:bg-black/50 text-white rounded-full transition-all duration-200 backdrop-blur-sm">
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                                                    </svg>
                                                </button>

                                                <!-- Indicators -->
                                                <div id="indicators-@post.Post.Id" class="absolute bottom-4 left-0 right-0 flex justify-center gap-2">
                                                    @for (int i = 0; i < post.Post.Media.Count; i++)
                                                    {
                                                        <buttn onclick="showImage('@post.Post.Id', @i)"
                                                                class="w-2 h-2 rounded-full transition-all duration-200 @(i == 0 ? "bg-white" : "bg-white/50 hover:bg-white/75")"></buttn>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }

                                <!-- Post Actions -->
                                <div class="px-6 py-4 bg-slate-50 border-t border-slate-100">
                                    <div class="flex items-center gap-6">
                                        <!-- Like Button -->
                                        <button class="flex items-center gap-2 px-4 py-2 rounded-xl transition-all duration-200 hover:bg-red-50 like-button group"
                                                data-postid="@post.Post.Id"
                                                data-liked="@post.IsLikedByCurrentUser.ToString().ToLower()">
                                            <svg xmlns="http://www.w3.org/2000/svg"
                                                 class="h-5 w-5 transition-all duration-200 @(post.IsLikedByCurrentUser ? "text-red-500" : "text-slate-400 group-hover:text-red-400")"
                                                 fill="@(post.IsLikedByCurrentUser ? "currentColor" : "none")"
                                                 stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                      d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                            </svg>
                                            <span class="likes-count font-medium text-slate-700">@post.Post.Likes</span>
                                        </button>

                                        <!-- Comment Button -->
                                        <button class="flex items-center gap-2 px-4 py-2 rounded-xl transition-all duration-200 hover:bg-blue-50 comment-button group"
                                                data-postid="@post.Post.Id"
                                                data-author-name="@post.AuthorName"
                                                data-author-avatar="@(string.IsNullOrEmpty(post.AuthorAvatar) ? "/img/VN.jpg" : post.AuthorAvatar)"
                                                data-author-id="@post.Post.AuthorId"
                                                data-media='@Json.Serialize(post.Post.Media)'
                                                data-comments='@Html.Raw(Json.Serialize(Model.CommentsForPosts.ContainsKey(post.Post.Id) ? Model.CommentsForPosts[post.Post.Id] : new List<CommentViewModel>()))'
                                                data-badges="@Html.Raw(Json.Serialize(Model.AuthorBadges?.ContainsKey(post.Post.AuthorId) == true ? Model.AuthorBadges[post.Post.AuthorId] : new List<object>()))">
                                            <svg xmlns="http://www.w3.org/2000/svg"
                                                 class="h-5 w-5 text-slate-400 group-hover:text-blue-400 transition-colors duration-200"
                                                 fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                      d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                                            </svg>
                                            <span class="font-medium text-slate-700">@(post.Post.Comments?.Count ?? 0)</span>
                                        </button>
                                    </div>
                                </div>
                            </article>
                        }
                    </div>
                }
            </div>

            <!-- SIDEBAR -->
            <div class="lg:col-span-1">
                <div class="sticky top-8">
                    <div class="bg-white rounded-2xl shadow-sm border border-slate-200 overflow-hidden">
                        <!-- Sidebar Header -->
                        <div class="bg-gradient-to-r from-purple-500 to-blue-500 p-6 text-white">
                            <div class="flex items-center gap-3 mb-2">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                                </svg>
                                <h2 class="text-lg font-semibold">Chọn tỉnh thành</h2>
                            </div>
                            <p class="text-purple-100 text-sm">Khám phá theo địa điểm</p>
                        </div>

                        <!-- Province List -->
                        <div class="p-4">
                            <div class="py-2 px-2 overflow-y-auto scrollbar-thin scrollbar-thumb-purple-200 scrollbar-track-transparent">
                                <div class="space-y-2">
                                    @foreach (var province in Model.Provinces)
                                    {
                                        <button type="button"
                                                class="w-full text-left px-4 py-3 rounded-xl transition-all duration-200 font-medium text-sm
                                                @(Model.SelectedProvinceId == province.Id
                                                    ? "bg-gradient-to-r from-purple-500 to-blue-500 text-white shadow-md transform scale-105"
                                                    : "bg-slate-50 text-slate-700 hover:bg-purple-50 hover:text-purple-700 hover:shadow-sm")"
                                                onclick="document.getElementById('selectedProvinceId').value='@province.Id'; document.getElementById('filterForm').submit();">
                                            <div class="flex items-center justify-between">
                                                <span>@province.Name</span>
                                                @if (Model.SelectedProvinceId == province.Id)
                                                {
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                                    </svg>
                                                }
                                            </div>
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("Components/_CommentModal")